apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "hybras.frontendFullname" . }}
  labels:
    {{- include "hybras.labels" . | nindent 4 }}
    app.kubernetes.io/component: frontend
spec:
  {{- if not .Values.services.frontend.autoscaling.enabled }}
  replicas: {{ .Values.services.frontend.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "hybras.selectorLabels" . | nindent 6 }}
      app.kubernetes.io/component: frontend
  template:
    metadata:
      {{- with .Values.services.frontend.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "hybras.selectorLabels" . | nindent 8 }}
        app.kubernetes.io/component: frontend
    spec:
      {{- with .Values.services.frontend.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "hybras.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.services.frontend.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-frontend
          securityContext:
            {{- toYaml .Values.services.frontend.securityContext | nindent 12 }}
          image: "{{ .Values.services.frontend.image.repository }}:{{ .Values.services.frontend.image.tag | default ( printf "%s-dist" .Chart.AppVersion ) }}"
          imagePullPolicy: {{ .Values.services.frontend.image.pullPolicy }}
          ports:
            - name: frontend-port
              containerPort: 4000
              protocol: TCP
          envFrom:
            - configMapRef:
                name: {{ include "hybras.frontendFullname" . }}-configs
          livenessProbe:
            httpGet:
              path: /home
              port: frontend-port
            initialDelaySeconds: 30
            periodSeconds: 60
            timeoutSeconds: 10
            failureThreshold: 2                      
          resources:
            {{- toYaml .Values.services.frontend.resources | nindent 12 }}
      initContainers:
        # TODO: formatar o comando wget para usar values
        - name: ping-backend
          image: busybox:1.28
          command: ['/bin/sh']
          args: 
            - '-c' 
            - >
              until wget --spider {{ printf "http://%s:8080%s" (include "hybras.backendFullname" .) .Values.config.server.path }}
                do echo waiting for REST API; sleep 10; 
              done
      {{- with .Values.services.frontend.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.services.frontend.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.services.frontend.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
